using Newtonsoft.Json;

namespace VaultSharp.Backends.Secret.Models.SSH
{
    /// <summary>
    /// Represents the Dynamic SSH Key Type Role definition.
    /// </summary>
    public class SSHDynamicRoleDefinition : SSHRoleDefinition
    {
        /// <summary>
        /// <para>[required]</para>
        /// Name of the registered key in Vault. 
        /// </summary>
        /// <value>
        /// The name of the key.
        /// </value>
        [JsonProperty("key")]
        public string KeyName { get; set; }

        /// <summary>
        /// <para>[required]</para>
        /// Gets or sets the admin user at remote host. 
        /// The shared key being registered should be for this user and should have root or sudo privileges. 
        /// Every time a dynamic credential is generated for a client, 
        /// Vault uses this admin username to login to remote host and install the generated credential.
        /// </summary>
        /// <value>
        /// The admin user.
        /// </value>
        [JsonProperty("admin_user")]
        public string AdminUser { get; set; }

        /// <summary>
        /// <para>[optional]</para>
        /// Gets or sets length of the RSA dynamic key in bits; can be either 1024 or 2048. 
        /// 1024 the default.
        /// </summary>
        /// <value>
        /// The key bits.
        /// </value>
        [JsonProperty("key_bits")]
        public int KeyBits { get; set; }

        /// <summary>
        /// <para>[optional]</para>
        /// Gets or sets the script used to install and uninstall public keys in the target machine. 
        /// Defaults to the built-in script.
        /// </summary>
        /// <value>
        /// The install script.
        /// </value>
        [JsonProperty("install_script")]
        public string InstallScript { get; set; }

        /// <summary>
        /// <para>[optional]</para>
        /// Gets or sets the comma separated option specification which will be prefixed to RSA keys in the remote host's authorized_keys file. 
        /// N.B.: Vault does not check this string for validity.
        /// </summary>
        /// <value>
        /// The key option specifications.
        /// </value>
        [JsonProperty("key_option_specs")]
        public string KeyOptionSpecifications { get; set; }

        /// <summary>
        /// <para>[required]</para>
        /// Type of credentials generated by this role.
        /// </summary>
        /// <value>
        /// The type of the key.
        /// </value>
        public override SSHKeyType KeyTypeToGenerate
        {
            get { return SSHKeyType.dynamic; }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SSHDynamicRoleDefinition"/> class.
        /// </summary>
        public SSHDynamicRoleDefinition()
        {
            KeyBits = 1024;
            CIDRValues = "0.0.0.0/0";
        }
    }
}